#
# This file is used to declare the list of libraries
# which are used as dependencies in the project.
# See https://docs.gradle.org/7.4.2/userguide/platforms.html#sub:central-declaration-of-dependencies
#
# For Micronaut, we have 3 kinds of dependencies:
#   - managed dependencies, which are exposed to consumers via a BOM (or version catalog)
#   - managed BOMs, which are imported into the BOM that we generate
#   - all other dependencies, which are implementation details
#
# If a library needs to appear in the BOM of the project, then it must be
# declared with the "managed-" prefix.
# If a BOM needs to be imported in the BOM of the project, then it must be
# declared with the "boms-" prefix.
# Both managed dependencies and BOMs need to have their version declared via
# a managed version (a version which alias starts with "managed-"

[versions]
micronaut = "4.5.0"
micronaut-core = "4.5.3"
micronaut-platform = "4.5.0"
micronaut-docs = "2.0.0"
micronaut-serde = "2.10.1"
micronaut-test = "4.2.1"
micronaut-test-resources = "2.5.0"
micronaut-logging = "1.3.0"
micronaut-gradle-plugin = "4.4.0"
micronaut-sourcegen = "1.1.0"
groovy = "4.0.17"
spock = "2.3-groovy-4.0"

# Managed versions appear in the BOM
managed-langchain4j = "0.31.0"

[libraries]
micronaut-core = { module = 'io.micronaut:micronaut-core-bom', version.ref = 'micronaut-core' }
micronaut-logging = { module = 'io.micronaut.logging:micronaut-logging-bom', version.ref = 'micronaut-logging' }
micronaut-serde = { module = 'io.micronaut.serde:micronaut-serde-bom', version.ref = 'micronaut-serde' }
micronaut-sourcegen = { module = 'io.micronaut.sourcegen:micronaut-sourcegen-bom', version.ref = 'micronaut-sourcegen' }
micronaut-test-resources = { module = 'io.micronaut.testresources:micronaut-test-resources-bom', version.ref = 'micronaut-test-resources' }
langchain4j = { module = 'dev.langchain4j:langchain4j', version.ref = "managed-langchain4j" }
langchain4j-ollama = { module = 'dev.langchain4j:langchain4j-ollama', version.ref = "managed-langchain4j" }
langchain4j-bedrock = { module = 'dev.langchain4j:langchain4j-bedrock', version.ref = "managed-langchain4j" }
langchain4j-anthropic = { module = 'dev.langchain4j:langchain4j-anthropic', version.ref = "managed-langchain4j" }
langchain4j-vertex-ai-gemini = { module = 'dev.langchain4j:langchain4j-vertex-ai-gemini', version.ref = "managed-langchain4j" }
langchain4j-vertex-ai = { module = 'dev.langchain4j:langchain4j-vertex-ai', version.ref = "managed-langchain4j" }
langchain4j-mistral-ai = { module = 'dev.langchain4j:langchain4j-mistral-ai', version.ref = "managed-langchain4j" }
langchain4j-open-ai = { module = 'dev.langchain4j:langchain4j-open-ai', version.ref = "managed-langchain4j" }
langchain4j-azure-open-ai = { module = 'dev.langchain4j:langchain4j-azure-open-ai', version.ref = "managed-langchain4j" }

# BOMs
boms-langchain4j = { module = "dev.langchain4j:langchain4j-bom", version.ref = "managed-langchain4j" }

# Plugins
gradle-micronaut = { module = "io.micronaut.gradle:micronaut-gradle-plugin", version.ref = "micronaut-gradle-plugin" }

[bundles]

[plugins]

